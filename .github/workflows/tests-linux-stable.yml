# GHA for test-linux-stable-int, test-linux-stable, test-linux-stable-oldkernel
name: tests linux stable

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  preflight:
    uses: ./.github/workflows/reusable-preflight.yml

  # https://github.com/paritytech/ci_cd/issues/864
  test-linux-stable-runtime-benchmarks:
    needs: [preflight]
    if: ${{ needs.preflight.outputs.changes_rust }}
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    env:
      RUST_TOOLCHAIN: stable
      # Enable debug assertions since we are running optimized builds for testing
      # but still want to have debug assertions.
      RUSTFLAGS: "-Cdebug-assertions=y -Dwarnings"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: script
        id: required
        run: forklift cargo nextest run --workspace --features runtime-benchmarks benchmark --locked --cargo-profile testnet --cargo-quiet
      - name: Stop all workflows if failed
        if: ${{ failure() && steps.required.conclusion == 'failure' && !github.event.pull_request.head.repo.fork }}
        uses: ./.github/actions/workflow-stopper
        with:
          app-id: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_ID }}
          app-key: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_KEY }}

  #
  #
  #
  test-linux-stable-archive:
    needs: [preflight]
    runs-on: ${{ matrix.runners }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        partition: [1/3, 2/3, 3/3]
        runners:
          [
            "${{ needs.preflight.outputs.RUNNER }}"
          ]
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
      # needed for tests that use unshare syscall
      options: --security-opt seccomp=unconfined
    env:
      RUST_TOOLCHAIN: stable
      # Enable debug assertions since we are running optimized builds for testing
      # but still want to have debug assertions.
      RUSTFLAGS: "-Cdebug-assertions=y -Dwarnings"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: script
        id: required
        run: |
          # Fixes "detected dubious ownership" error in the ci
          git config --global --add safe.directory '*'
          forklift cargo nextest archive --archive-file test-linux-stable-nextest-build.tar.zst \
            --workspace \
            --locked \
            --release \
            --cargo-quiet \
            --features try-runtime,experimental,ci-only-tests

      - run: ls -al
      - run: exit 1

  test-linux-stable:
    needs: [test-linux-stable-archive]
    if: ${{ needs.preflight.outputs.changes_rust }}
    runs-on: ${{ matrix.runners }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        partition: [1/3, 2/3, 3/3]
        runners:
          [
            "${{ needs.preflight.outputs.RUNNER }}",
            "${{ needs.preflight.outputs.RUNNER_OLDLINUX }}",
          ]
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
      # needed for tests that use unshare syscall
      options: --security-opt seccomp=unconfined
    env:
      RUST_TOOLCHAIN: stable
      # Enable debug assertions since we are running optimized builds for testing
      # but still want to have debug assertions.
      RUSTFLAGS: "-Cdebug-assertions=y -Dwarnings"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: script
        id: required
        run: |
          # Fixes "detected dubious ownership" error in the ci
          git config --global --add safe.directory '*'
          forklift cargo nextest run \
            --workspace \
            --locked \
            --release \
            --no-fail-fast \
            --cargo-quiet \
            --features try-runtime,experimental,ci-only-tests \
            --partition count:${{ matrix.partition }}
      # run runtime-api tests with `enable-staging-api` feature on the 1st node
      - name: runtime-api tests
        if: ${{ matrix.partition == '1/3' }}
        run: forklift cargo nextest run -p sp-api-test --features enable-staging-api --cargo-quiet
      - name: Stop all workflows if failed
        if: ${{ failure() && steps.required.conclusion == 'failure' && !github.event.pull_request.head.repo.fork }}
        uses: ./.github/actions/workflow-stopper
        with:
          app-id: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_ID }}
          app-key: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_KEY }}