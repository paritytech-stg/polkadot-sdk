name: checks MacOS

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  set_image:
    runs-on: ubuntu-latest
    outputs:
      RUST_VERSION: ${{ steps.set_image.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Get rust version from image name
        id: set_image
        run: echo "RUST_VERSION=$(cat .github/env | sed -E 's/.*ci-unified:([^-]+)-([^-]+).*/\2/')" >> $GITHUB_OUTPUT

  cargo-check-each-crate-macos:
    runs-on: macOS
    needs: [set_image]
    env:
      SKIP_WASM_BUILD: 1
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@1ccc07ccd54b6048295516a3eb89b192c35057dc # master from 12.09.2024
      - uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc # v1.9.0
        with:
          cache: false
          toolchain: ${{ steps.set_image.outputs.RUST_VERSION }}
          target: wasm32-unknown-unknown
          components: rust-src, rustfmt, clippy
      - name: Install protobuf
        run: brew install protobuf
      - name: Run cargo check
        run: |
          rustup toolchain install "nightly-2024-04-10"
          cargo check --workspace --locked
